### YamlMime:ManagedReference
items:
- uid: LaserTagBox.Model.Mind.Intel
  commentId: T:LaserTagBox.Model.Mind.Intel
  id: Intel
  parent: LaserTagBox.Model.Mind
  children:
  - LaserTagBox.Model.Mind.Intel.#ctor(System.Int32,System.Int32)
  - LaserTagBox.Model.Mind.Intel.AddDitches(System.Int64,System.Collections.Generic.List{Mars.Interfaces.Environments.Position})
  - LaserTagBox.Model.Mind.Intel.AddEnemies(System.Int64,System.Collections.Generic.HashSet{LaserTagBox.Model.Shared.EnemySnapshot})
  - LaserTagBox.Model.Mind.Intel.AddHills(System.Int64,System.Collections.Generic.List{Mars.Interfaces.Environments.Position})
  - LaserTagBox.Model.Mind.Intel.GetDitches
  - LaserTagBox.Model.Mind.Intel.GetEnemies(System.Int64)
  - LaserTagBox.Model.Mind.Intel.GetGoal(Mars.Interfaces.Environments.Position)
  - LaserTagBox.Model.Mind.Intel.GetHills
  - LaserTagBox.Model.Mind.Intel.GetInstance(System.Int32,System.Int32)
  - LaserTagBox.Model.Mind.Intel.GetLastKnownPosition
  langs:
  - csharp
  - vb
  name: Intel
  nameWithType: Intel
  fullName: LaserTagBox.Model.Mind.Intel
  type: Class
  source:
    remote:
      path: LaserTagBox/Model/Mind/Examples/Example7QL.cs
      branch: master
      repo: git@github.com:MARS-Group-HAW/model-mars-laser-tag-game.git
    id: Intel
    path: ../LaserTagBox/Model/Mind/Examples/Example7QL.cs
    startLine: 293
  assemblies:
  - LaserTagBox
  namespace: LaserTagBox.Model.Mind
  syntax:
    content: public class Intel
    content.vb: Public Class Intel
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: LaserTagBox.Model.Mind.Intel.#ctor(System.Int32,System.Int32)
  commentId: M:LaserTagBox.Model.Mind.Intel.#ctor(System.Int32,System.Int32)
  id: '#ctor(System.Int32,System.Int32)'
  parent: LaserTagBox.Model.Mind.Intel
  langs:
  - csharp
  - vb
  name: Intel(int, int)
  nameWithType: Intel.Intel(int, int)
  fullName: LaserTagBox.Model.Mind.Intel.Intel(int, int)
  type: Constructor
  source:
    remote:
      path: LaserTagBox/Model/Mind/Examples/Example7QL.cs
      branch: master
      repo: git@github.com:MARS-Group-HAW/model-mars-laser-tag-game.git
    id: .ctor
    path: ../LaserTagBox/Model/Mind/Examples/Example7QL.cs
    startLine: 308
  assemblies:
  - LaserTagBox
  namespace: LaserTagBox.Model.Mind
  syntax:
    content: public Intel(int width, int height)
    parameters:
    - id: width
      type: System.Int32
    - id: height
      type: System.Int32
    content.vb: Public Sub New(width As Integer, height As Integer)
  overload: LaserTagBox.Model.Mind.Intel.#ctor*
  nameWithType.vb: Intel.New(Integer, Integer)
  fullName.vb: LaserTagBox.Model.Mind.Intel.New(Integer, Integer)
  name.vb: New(Integer, Integer)
- uid: LaserTagBox.Model.Mind.Intel.GetLastKnownPosition
  commentId: M:LaserTagBox.Model.Mind.Intel.GetLastKnownPosition
  id: GetLastKnownPosition
  parent: LaserTagBox.Model.Mind.Intel
  langs:
  - csharp
  - vb
  name: GetLastKnownPosition()
  nameWithType: Intel.GetLastKnownPosition()
  fullName: LaserTagBox.Model.Mind.Intel.GetLastKnownPosition()
  type: Method
  source:
    remote:
      path: LaserTagBox/Model/Mind/Examples/Example7QL.cs
      branch: master
      repo: git@github.com:MARS-Group-HAW/model-mars-laser-tag-game.git
    id: GetLastKnownPosition
    path: ../LaserTagBox/Model/Mind/Examples/Example7QL.cs
    startLine: 322
  assemblies:
  - LaserTagBox
  namespace: LaserTagBox.Model.Mind
  summary: Returns the last known position of an enemy.
  example: []
  syntax:
    content: public Position GetLastKnownPosition()
    return:
      type: Mars.Interfaces.Environments.Position
      description: ''
    content.vb: Public Function GetLastKnownPosition() As Position
  overload: LaserTagBox.Model.Mind.Intel.GetLastKnownPosition*
- uid: LaserTagBox.Model.Mind.Intel.GetGoal(Mars.Interfaces.Environments.Position)
  commentId: M:LaserTagBox.Model.Mind.Intel.GetGoal(Mars.Interfaces.Environments.Position)
  id: GetGoal(Mars.Interfaces.Environments.Position)
  parent: LaserTagBox.Model.Mind.Intel
  langs:
  - csharp
  - vb
  name: GetGoal(Position)
  nameWithType: Intel.GetGoal(Position)
  fullName: LaserTagBox.Model.Mind.Intel.GetGoal(Mars.Interfaces.Environments.Position)
  type: Method
  source:
    remote:
      path: LaserTagBox/Model/Mind/Examples/Example7QL.cs
      branch: master
      repo: git@github.com:MARS-Group-HAW/model-mars-laser-tag-game.git
    id: GetGoal
    path: ../LaserTagBox/Model/Mind/Examples/Example7QL.cs
    startLine: 327
  assemblies:
  - LaserTagBox
  namespace: LaserTagBox.Model.Mind
  syntax:
    content: public Position GetGoal(Position currentPosition)
    parameters:
    - id: currentPosition
      type: Mars.Interfaces.Environments.Position
    return:
      type: Mars.Interfaces.Environments.Position
    content.vb: Public Function GetGoal(currentPosition As Position) As Position
  overload: LaserTagBox.Model.Mind.Intel.GetGoal*
- uid: LaserTagBox.Model.Mind.Intel.AddEnemies(System.Int64,System.Collections.Generic.HashSet{LaserTagBox.Model.Shared.EnemySnapshot})
  commentId: M:LaserTagBox.Model.Mind.Intel.AddEnemies(System.Int64,System.Collections.Generic.HashSet{LaserTagBox.Model.Shared.EnemySnapshot})
  id: AddEnemies(System.Int64,System.Collections.Generic.HashSet{LaserTagBox.Model.Shared.EnemySnapshot})
  parent: LaserTagBox.Model.Mind.Intel
  langs:
  - csharp
  - vb
  name: AddEnemies(long, HashSet<EnemySnapshot>)
  nameWithType: Intel.AddEnemies(long, HashSet<EnemySnapshot>)
  fullName: LaserTagBox.Model.Mind.Intel.AddEnemies(long, System.Collections.Generic.HashSet<LaserTagBox.Model.Shared.EnemySnapshot>)
  type: Method
  source:
    remote:
      path: LaserTagBox/Model/Mind/Examples/Example7QL.cs
      branch: master
      repo: git@github.com:MARS-Group-HAW/model-mars-laser-tag-game.git
    id: AddEnemies
    path: ../LaserTagBox/Model/Mind/Examples/Example7QL.cs
    startLine: 364
  assemblies:
  - LaserTagBox
  namespace: LaserTagBox.Model.Mind
  summary: Adds all enemies an agents has explored in the current tick.
  example: []
  syntax:
    content: public bool AddEnemies(long curTick, HashSet<EnemySnapshot> enemies)
    parameters:
    - id: curTick
      type: System.Int64
      description: the current tick the agent is at
    - id: enemies
      type: System.Collections.Generic.HashSet{LaserTagBox.Model.Shared.EnemySnapshot}
      description: explored enemies
    return:
      type: System.Boolean
      description: false, if method is called twice or no enemies found, otherwise true
    content.vb: Public Function AddEnemies(curTick As Long, enemies As HashSet(Of EnemySnapshot)) As Boolean
  overload: LaserTagBox.Model.Mind.Intel.AddEnemies*
  nameWithType.vb: Intel.AddEnemies(Long, HashSet(Of EnemySnapshot))
  fullName.vb: LaserTagBox.Model.Mind.Intel.AddEnemies(Long, System.Collections.Generic.HashSet(Of LaserTagBox.Model.Shared.EnemySnapshot))
  name.vb: AddEnemies(Long, HashSet(Of EnemySnapshot))
- uid: LaserTagBox.Model.Mind.Intel.GetEnemies(System.Int64)
  commentId: M:LaserTagBox.Model.Mind.Intel.GetEnemies(System.Int64)
  id: GetEnemies(System.Int64)
  parent: LaserTagBox.Model.Mind.Intel
  langs:
  - csharp
  - vb
  name: GetEnemies(long)
  nameWithType: Intel.GetEnemies(long)
  fullName: LaserTagBox.Model.Mind.Intel.GetEnemies(long)
  type: Method
  source:
    remote:
      path: LaserTagBox/Model/Mind/Examples/Example7QL.cs
      branch: master
      repo: git@github.com:MARS-Group-HAW/model-mars-laser-tag-game.git
    id: GetEnemies
    path: ../LaserTagBox/Model/Mind/Examples/Example7QL.cs
    startLine: 382
  assemblies:
  - LaserTagBox
  namespace: LaserTagBox.Model.Mind
  summary: Returns all enemies explored by all members at the current tick.
  example: []
  syntax:
    content: public HashSet<EnemySnapshot> GetEnemies(long curTick)
    parameters:
    - id: curTick
      type: System.Int64
      description: the current tick the agent is at
    return:
      type: System.Collections.Generic.HashSet{LaserTagBox.Model.Shared.EnemySnapshot}
      description: set of enemies explored
    content.vb: Public Function GetEnemies(curTick As Long) As HashSet(Of EnemySnapshot)
  overload: LaserTagBox.Model.Mind.Intel.GetEnemies*
  nameWithType.vb: Intel.GetEnemies(Long)
  fullName.vb: LaserTagBox.Model.Mind.Intel.GetEnemies(Long)
  name.vb: GetEnemies(Long)
- uid: LaserTagBox.Model.Mind.Intel.AddHills(System.Int64,System.Collections.Generic.List{Mars.Interfaces.Environments.Position})
  commentId: M:LaserTagBox.Model.Mind.Intel.AddHills(System.Int64,System.Collections.Generic.List{Mars.Interfaces.Environments.Position})
  id: AddHills(System.Int64,System.Collections.Generic.List{Mars.Interfaces.Environments.Position})
  parent: LaserTagBox.Model.Mind.Intel
  langs:
  - csharp
  - vb
  name: AddHills(long, List<Position>)
  nameWithType: Intel.AddHills(long, List<Position>)
  fullName: LaserTagBox.Model.Mind.Intel.AddHills(long, System.Collections.Generic.List<Mars.Interfaces.Environments.Position>)
  type: Method
  source:
    remote:
      path: LaserTagBox/Model/Mind/Examples/Example7QL.cs
      branch: master
      repo: git@github.com:MARS-Group-HAW/model-mars-laser-tag-game.git
    id: AddHills
    path: ../LaserTagBox/Model/Mind/Examples/Example7QL.cs
    startLine: 397
  assemblies:
  - LaserTagBox
  namespace: LaserTagBox.Model.Mind
  summary: Adds all hills the agent has explored at the current tick.
  example: []
  syntax:
    content: public bool AddHills(long curTick, List<Position> hills)
    parameters:
    - id: curTick
      type: System.Int64
      description: the current tick the agent is at
    - id: hills
      type: System.Collections.Generic.List{Mars.Interfaces.Environments.Position}
      description: explored hills
    return:
      type: System.Boolean
      description: true, if hills were added - false, if no hills found
    content.vb: Public Function AddHills(curTick As Long, hills As List(Of Position)) As Boolean
  overload: LaserTagBox.Model.Mind.Intel.AddHills*
  nameWithType.vb: Intel.AddHills(Long, List(Of Position))
  fullName.vb: LaserTagBox.Model.Mind.Intel.AddHills(Long, System.Collections.Generic.List(Of Mars.Interfaces.Environments.Position))
  name.vb: AddHills(Long, List(Of Position))
- uid: LaserTagBox.Model.Mind.Intel.GetHills
  commentId: M:LaserTagBox.Model.Mind.Intel.GetHills
  id: GetHills
  parent: LaserTagBox.Model.Mind.Intel
  langs:
  - csharp
  - vb
  name: GetHills()
  nameWithType: Intel.GetHills()
  fullName: LaserTagBox.Model.Mind.Intel.GetHills()
  type: Method
  source:
    remote:
      path: LaserTagBox/Model/Mind/Examples/Example7QL.cs
      branch: master
      repo: git@github.com:MARS-Group-HAW/model-mars-laser-tag-game.git
    id: GetHills
    path: ../LaserTagBox/Model/Mind/Examples/Example7QL.cs
    startLine: 412
  assemblies:
  - LaserTagBox
  namespace: LaserTagBox.Model.Mind
  summary: Returns all explored hills for the current tick.
  example: []
  syntax:
    content: public HashSet<Position> GetHills()
    return:
      type: System.Collections.Generic.HashSet{Mars.Interfaces.Environments.Position}
      description: list of explored hills
    content.vb: Public Function GetHills() As HashSet(Of Position)
  overload: LaserTagBox.Model.Mind.Intel.GetHills*
- uid: LaserTagBox.Model.Mind.Intel.AddDitches(System.Int64,System.Collections.Generic.List{Mars.Interfaces.Environments.Position})
  commentId: M:LaserTagBox.Model.Mind.Intel.AddDitches(System.Int64,System.Collections.Generic.List{Mars.Interfaces.Environments.Position})
  id: AddDitches(System.Int64,System.Collections.Generic.List{Mars.Interfaces.Environments.Position})
  parent: LaserTagBox.Model.Mind.Intel
  langs:
  - csharp
  - vb
  name: AddDitches(long, List<Position>)
  nameWithType: Intel.AddDitches(long, List<Position>)
  fullName: LaserTagBox.Model.Mind.Intel.AddDitches(long, System.Collections.Generic.List<Mars.Interfaces.Environments.Position>)
  type: Method
  source:
    remote:
      path: LaserTagBox/Model/Mind/Examples/Example7QL.cs
      branch: master
      repo: git@github.com:MARS-Group-HAW/model-mars-laser-tag-game.git
    id: AddDitches
    path: ../LaserTagBox/Model/Mind/Examples/Example7QL.cs
    startLine: 425
  assemblies:
  - LaserTagBox
  namespace: LaserTagBox.Model.Mind
  summary: Adds all ditches the agent has explored at the current tick.
  example: []
  syntax:
    content: public bool AddDitches(long curTick, List<Position> ditches)
    parameters:
    - id: curTick
      type: System.Int64
      description: the current tick the agent is at
    - id: ditches
      type: System.Collections.Generic.List{Mars.Interfaces.Environments.Position}
    return:
      type: System.Boolean
      description: true, if hills were added - false, no ditches found
    content.vb: Public Function AddDitches(curTick As Long, ditches As List(Of Position)) As Boolean
  overload: LaserTagBox.Model.Mind.Intel.AddDitches*
  nameWithType.vb: Intel.AddDitches(Long, List(Of Position))
  fullName.vb: LaserTagBox.Model.Mind.Intel.AddDitches(Long, System.Collections.Generic.List(Of Mars.Interfaces.Environments.Position))
  name.vb: AddDitches(Long, List(Of Position))
- uid: LaserTagBox.Model.Mind.Intel.GetDitches
  commentId: M:LaserTagBox.Model.Mind.Intel.GetDitches
  id: GetDitches
  parent: LaserTagBox.Model.Mind.Intel
  langs:
  - csharp
  - vb
  name: GetDitches()
  nameWithType: Intel.GetDitches()
  fullName: LaserTagBox.Model.Mind.Intel.GetDitches()
  type: Method
  source:
    remote:
      path: LaserTagBox/Model/Mind/Examples/Example7QL.cs
      branch: master
      repo: git@github.com:MARS-Group-HAW/model-mars-laser-tag-game.git
    id: GetDitches
    path: ../LaserTagBox/Model/Mind/Examples/Example7QL.cs
    startLine: 440
  assemblies:
  - LaserTagBox
  namespace: LaserTagBox.Model.Mind
  summary: Returns all explored ditches for the current tick.
  example: []
  syntax:
    content: public HashSet<Position> GetDitches()
    return:
      type: System.Collections.Generic.HashSet{Mars.Interfaces.Environments.Position}
      description: list of explored ditches
    content.vb: Public Function GetDitches() As HashSet(Of Position)
  overload: LaserTagBox.Model.Mind.Intel.GetDitches*
- uid: LaserTagBox.Model.Mind.Intel.GetInstance(System.Int32,System.Int32)
  commentId: M:LaserTagBox.Model.Mind.Intel.GetInstance(System.Int32,System.Int32)
  id: GetInstance(System.Int32,System.Int32)
  parent: LaserTagBox.Model.Mind.Intel
  langs:
  - csharp
  - vb
  name: GetInstance(int, int)
  nameWithType: Intel.GetInstance(int, int)
  fullName: LaserTagBox.Model.Mind.Intel.GetInstance(int, int)
  type: Method
  source:
    remote:
      path: LaserTagBox/Model/Mind/Examples/Example7QL.cs
      branch: master
      repo: git@github.com:MARS-Group-HAW/model-mars-laser-tag-game.git
    id: GetInstance
    path: ../LaserTagBox/Model/Mind/Examples/Example7QL.cs
    startLine: 448
  assemblies:
  - LaserTagBox
  namespace: LaserTagBox.Model.Mind
  syntax:
    content: public static Intel GetInstance(int width, int height)
    parameters:
    - id: width
      type: System.Int32
    - id: height
      type: System.Int32
    return:
      type: LaserTagBox.Model.Mind.Intel
    content.vb: Public Shared Function GetInstance(width As Integer, height As Integer) As Intel
  overload: LaserTagBox.Model.Mind.Intel.GetInstance*
  nameWithType.vb: Intel.GetInstance(Integer, Integer)
  fullName.vb: LaserTagBox.Model.Mind.Intel.GetInstance(Integer, Integer)
  name.vb: GetInstance(Integer, Integer)
references:
- uid: LaserTagBox.Model.Mind
  commentId: N:LaserTagBox.Model.Mind
  href: LaserTagBox.html
  name: LaserTagBox.Model.Mind
  nameWithType: LaserTagBox.Model.Mind
  fullName: LaserTagBox.Model.Mind
  spec.csharp:
  - uid: LaserTagBox
    name: LaserTagBox
    href: LaserTagBox.html
  - name: .
  - uid: LaserTagBox.Model
    name: Model
    href: LaserTagBox.Model.html
  - name: .
  - uid: LaserTagBox.Model.Mind
    name: Mind
    href: LaserTagBox.Model.Mind.html
  spec.vb:
  - uid: LaserTagBox
    name: LaserTagBox
    href: LaserTagBox.html
  - name: .
  - uid: LaserTagBox.Model
    name: Model
    href: LaserTagBox.Model.html
  - name: .
  - uid: LaserTagBox.Model.Mind
    name: Mind
    href: LaserTagBox.Model.Mind.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: LaserTagBox.Model.Mind.Intel.#ctor*
  commentId: Overload:LaserTagBox.Model.Mind.Intel.#ctor
  href: LaserTagBox.Model.Mind.Intel.html#LaserTagBox_Model_Mind_Intel__ctor_System_Int32_System_Int32_
  name: Intel
  nameWithType: Intel.Intel
  fullName: LaserTagBox.Model.Mind.Intel.Intel
  nameWithType.vb: Intel.New
  fullName.vb: LaserTagBox.Model.Mind.Intel.New
  name.vb: New
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: LaserTagBox.Model.Mind.Intel.GetLastKnownPosition*
  commentId: Overload:LaserTagBox.Model.Mind.Intel.GetLastKnownPosition
  href: LaserTagBox.Model.Mind.Intel.html#LaserTagBox_Model_Mind_Intel_GetLastKnownPosition
  name: GetLastKnownPosition
  nameWithType: Intel.GetLastKnownPosition
  fullName: LaserTagBox.Model.Mind.Intel.GetLastKnownPosition
- uid: Mars.Interfaces.Environments.Position
  commentId: T:Mars.Interfaces.Environments.Position
  parent: Mars.Interfaces.Environments
  isExternal: true
  name: Position
  nameWithType: Position
  fullName: Mars.Interfaces.Environments.Position
- uid: Mars.Interfaces.Environments
  commentId: N:Mars.Interfaces.Environments
  isExternal: true
  name: Mars.Interfaces.Environments
  nameWithType: Mars.Interfaces.Environments
  fullName: Mars.Interfaces.Environments
  spec.csharp:
  - uid: Mars
    name: Mars
    isExternal: true
  - name: .
  - uid: Mars.Interfaces
    name: Interfaces
    isExternal: true
  - name: .
  - uid: Mars.Interfaces.Environments
    name: Environments
    isExternal: true
  spec.vb:
  - uid: Mars
    name: Mars
    isExternal: true
  - name: .
  - uid: Mars.Interfaces
    name: Interfaces
    isExternal: true
  - name: .
  - uid: Mars.Interfaces.Environments
    name: Environments
    isExternal: true
- uid: LaserTagBox.Model.Mind.Intel.GetGoal*
  commentId: Overload:LaserTagBox.Model.Mind.Intel.GetGoal
  href: LaserTagBox.Model.Mind.Intel.html#LaserTagBox_Model_Mind_Intel_GetGoal_Mars_Interfaces_Environments_Position_
  name: GetGoal
  nameWithType: Intel.GetGoal
  fullName: LaserTagBox.Model.Mind.Intel.GetGoal
- uid: LaserTagBox.Model.Mind.Intel.AddEnemies*
  commentId: Overload:LaserTagBox.Model.Mind.Intel.AddEnemies
  href: LaserTagBox.Model.Mind.Intel.html#LaserTagBox_Model_Mind_Intel_AddEnemies_System_Int64_System_Collections_Generic_HashSet_LaserTagBox_Model_Shared_EnemySnapshot__
  name: AddEnemies
  nameWithType: Intel.AddEnemies
  fullName: LaserTagBox.Model.Mind.Intel.AddEnemies
- uid: System.Int64
  commentId: T:System.Int64
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int64
  name: long
  nameWithType: long
  fullName: long
  nameWithType.vb: Long
  fullName.vb: Long
  name.vb: Long
- uid: System.Collections.Generic.HashSet{LaserTagBox.Model.Shared.EnemySnapshot}
  commentId: T:System.Collections.Generic.HashSet{LaserTagBox.Model.Shared.EnemySnapshot}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.HashSet`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.hashset-1
  name: HashSet<EnemySnapshot>
  nameWithType: HashSet<EnemySnapshot>
  fullName: System.Collections.Generic.HashSet<LaserTagBox.Model.Shared.EnemySnapshot>
  nameWithType.vb: HashSet(Of EnemySnapshot)
  fullName.vb: System.Collections.Generic.HashSet(Of LaserTagBox.Model.Shared.EnemySnapshot)
  name.vb: HashSet(Of EnemySnapshot)
  spec.csharp:
  - uid: System.Collections.Generic.HashSet`1
    name: HashSet
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.hashset-1
  - name: <
  - uid: LaserTagBox.Model.Shared.EnemySnapshot
    name: EnemySnapshot
    href: LaserTagBox.Model.Shared.EnemySnapshot.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.HashSet`1
    name: HashSet
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.hashset-1
  - name: (
  - name: Of
  - name: " "
  - uid: LaserTagBox.Model.Shared.EnemySnapshot
    name: EnemySnapshot
    href: LaserTagBox.Model.Shared.EnemySnapshot.html
  - name: )
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: System.Collections.Generic.HashSet`1
  commentId: T:System.Collections.Generic.HashSet`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.hashset-1
  name: HashSet<T>
  nameWithType: HashSet<T>
  fullName: System.Collections.Generic.HashSet<T>
  nameWithType.vb: HashSet(Of T)
  fullName.vb: System.Collections.Generic.HashSet(Of T)
  name.vb: HashSet(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.HashSet`1
    name: HashSet
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.hashset-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.HashSet`1
    name: HashSet
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.hashset-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: LaserTagBox.Model.Mind.Intel.GetEnemies*
  commentId: Overload:LaserTagBox.Model.Mind.Intel.GetEnemies
  href: LaserTagBox.Model.Mind.Intel.html#LaserTagBox_Model_Mind_Intel_GetEnemies_System_Int64_
  name: GetEnemies
  nameWithType: Intel.GetEnemies
  fullName: LaserTagBox.Model.Mind.Intel.GetEnemies
- uid: LaserTagBox.Model.Mind.Intel.AddHills*
  commentId: Overload:LaserTagBox.Model.Mind.Intel.AddHills
  href: LaserTagBox.Model.Mind.Intel.html#LaserTagBox_Model_Mind_Intel_AddHills_System_Int64_System_Collections_Generic_List_Mars_Interfaces_Environments_Position__
  name: AddHills
  nameWithType: Intel.AddHills
  fullName: LaserTagBox.Model.Mind.Intel.AddHills
- uid: System.Collections.Generic.List{Mars.Interfaces.Environments.Position}
  commentId: T:System.Collections.Generic.List{Mars.Interfaces.Environments.Position}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<Position>
  nameWithType: List<Position>
  fullName: System.Collections.Generic.List<Mars.Interfaces.Environments.Position>
  nameWithType.vb: List(Of Position)
  fullName.vb: System.Collections.Generic.List(Of Mars.Interfaces.Environments.Position)
  name.vb: List(Of Position)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: Mars.Interfaces.Environments.Position
    name: Position
    isExternal: true
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: Mars.Interfaces.Environments.Position
    name: Position
    isExternal: true
  - name: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: LaserTagBox.Model.Mind.Intel.GetHills*
  commentId: Overload:LaserTagBox.Model.Mind.Intel.GetHills
  href: LaserTagBox.Model.Mind.Intel.html#LaserTagBox_Model_Mind_Intel_GetHills
  name: GetHills
  nameWithType: Intel.GetHills
  fullName: LaserTagBox.Model.Mind.Intel.GetHills
- uid: System.Collections.Generic.HashSet{Mars.Interfaces.Environments.Position}
  commentId: T:System.Collections.Generic.HashSet{Mars.Interfaces.Environments.Position}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.HashSet`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.hashset-1
  name: HashSet<Position>
  nameWithType: HashSet<Position>
  fullName: System.Collections.Generic.HashSet<Mars.Interfaces.Environments.Position>
  nameWithType.vb: HashSet(Of Position)
  fullName.vb: System.Collections.Generic.HashSet(Of Mars.Interfaces.Environments.Position)
  name.vb: HashSet(Of Position)
  spec.csharp:
  - uid: System.Collections.Generic.HashSet`1
    name: HashSet
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.hashset-1
  - name: <
  - uid: Mars.Interfaces.Environments.Position
    name: Position
    isExternal: true
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.HashSet`1
    name: HashSet
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.hashset-1
  - name: (
  - name: Of
  - name: " "
  - uid: Mars.Interfaces.Environments.Position
    name: Position
    isExternal: true
  - name: )
- uid: LaserTagBox.Model.Mind.Intel.AddDitches*
  commentId: Overload:LaserTagBox.Model.Mind.Intel.AddDitches
  href: LaserTagBox.Model.Mind.Intel.html#LaserTagBox_Model_Mind_Intel_AddDitches_System_Int64_System_Collections_Generic_List_Mars_Interfaces_Environments_Position__
  name: AddDitches
  nameWithType: Intel.AddDitches
  fullName: LaserTagBox.Model.Mind.Intel.AddDitches
- uid: LaserTagBox.Model.Mind.Intel.GetDitches*
  commentId: Overload:LaserTagBox.Model.Mind.Intel.GetDitches
  href: LaserTagBox.Model.Mind.Intel.html#LaserTagBox_Model_Mind_Intel_GetDitches
  name: GetDitches
  nameWithType: Intel.GetDitches
  fullName: LaserTagBox.Model.Mind.Intel.GetDitches
- uid: LaserTagBox.Model.Mind.Intel.GetInstance*
  commentId: Overload:LaserTagBox.Model.Mind.Intel.GetInstance
  href: LaserTagBox.Model.Mind.Intel.html#LaserTagBox_Model_Mind_Intel_GetInstance_System_Int32_System_Int32_
  name: GetInstance
  nameWithType: Intel.GetInstance
  fullName: LaserTagBox.Model.Mind.Intel.GetInstance
- uid: LaserTagBox.Model.Mind.Intel
  commentId: T:LaserTagBox.Model.Mind.Intel
  parent: LaserTagBox.Model.Mind
  href: LaserTagBox.Model.Mind.Intel.html
  name: Intel
  nameWithType: Intel
  fullName: LaserTagBox.Model.Mind.Intel
